name: Build

on:
  release:
    types: [published]
  push:
    branches:    
      - 'main'
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Install hunspell
        run:  sudo apt-get install -y hunspell libhunspell-dev hunspell-en-us

      - name: test
        run: |
          pip install -r requirements.txt
          pip install -r dev_requirements.txt
          python3 -c "import language_tool_python; tool = language_tool_python.LanguageTool('en')"
          cd dvrprocess
          pytest --cov . --cov-branch --cov-report term-missing

  build-and-push-image:
    runs-on: ubuntu-22.04
    needs: [test]
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          labels: ${{ steps.meta.outputs.labels }}
